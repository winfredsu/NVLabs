/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from '@angular/core';
import * as i1 from '../../../../src/app/affix.directive';
import * as i2 from '@angular/platform-browser';
import * as i3 from '@angular/router';
import * as i4 from '@angular/common';
import * as i5 from '../../../../src/app/simulator/simulator.component';
var styles_SimulatorComponent = [];
export var RenderType_SimulatorComponent = i0.ɵcrt({ encapsulation: 2,
    styles: styles_SimulatorComponent, data: {} });
export function View_SimulatorComponent_0(_l) {
    return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { elTitle: 0 }), i0.ɵqud(402653184, 2, { elIntro: 0 }),
        i0.ɵqud(402653184, 3, { elNav: 0 }), i0.ɵqud(402653184, 4, { elTitleWrapper: 0 }), (_l()(),
            i0.ɵeld(0, null, null, 87, 'div', [['class', 'content-sm container']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n		'])), (_l()(), i0.ɵeld(0, null, null, 84, 'div', [['class', 'row']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n				'])), (_l()(), i0.ɵeld(0, null, null, 81, 'div', [['class', 'col-lg-9 col-lg-offset-2']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n						'])), (_l()(), i0.ɵeld(0, [[4, 0], ['titleWrapper',
                1]], null, 5, 'div', [['class', 'product-title']], [[4, 'min-height', 'px']], null, null, null, null)), (_l()(), i0.ɵted(null, ['\n							'])), (_l()(), i0.ɵeld(0, [[1, 0], ['title', 1]], null, 2, 'h1', [['affixTop', '97']], null, [['window', 'scroll']], function (_v, en, $event) {
            var ad = true;
            if (('window:scroll' === en)) {
                var pd_0 = (i0.ɵnov(_v, 13).onWindowScroll() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(16384, null, 0, i1.AffixDirective, [i2.DOCUMENT, i0.ElementRef], { scrollOffset: [0, 'scrollOffset'], affixTop: [1,
                'affixTop'] }, null), (_l()(), i0.ɵted(null, ['Gem5-NVP Simulator'])),
        (_l()(), i0.ɵted(null, ['\n						'])), (_l()(), i0.ɵted(null, ['\n						'])),
        (_l()(), i0.ɵeld(0, [[2, 0], ['intro', 1]], null, 20, 'div', [['class', 'row product-intro margin-b-20 margin-t-30']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n								'])), (_l()(), i0.ɵeld(0, null, null, 4, 'div', [['class', 'col-sm-8']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n									'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The gem5-NVP is a simulating framework for nonvolatile processors (NVP) and nonvolatile systems based on the gem5 simulator. It provides multiple interfaces for adding description of SimObjects\' energy behavior as well as an energy management module which allows users to simulate state changes (power-on, power-off, etc.) easily.\n									'])),
        (_l()(), i0.ɵted(null, ['\n								'])), (_l()(), i0.ɵted(null, ['\n								'])), (_l()(), i0.ɵeld(0, null, null, 11, 'div', [['class', 'col-sm-4']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n										'])), (_l()(),
            i0.ɵeld(0, null, null, 8, 'div', [['class', 'margin-t-5']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n												'])), (_l()(), i0.ɵeld(0, null, null, 2, 'button', [['class', 'btn-theme btn-color1-bg btn-block text-uppercase'], ['routerLink',
                '/simulator/getting-started']], null, [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 30).onClick() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(16384, null, 0, i3.RouterLink, [i3.Router, i3.ActivatedRoute, [8, null], i0.Renderer2, i0.ElementRef], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['Get Started'])), (_l()(), i0.ɵted(null, ['\n												'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'button', [['class', 'btn-theme btn-white-bg btn-block text-uppercase'],
                ['href', '#']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Learn More'])), (_l()(),
            i0.ɵted(null, ['\n										'])), (_l()(), i0.ɵted(null, [' \n								'])),
        (_l()(), i0.ɵted(null, ['\n						'])), (_l()(), i0.ɵted(null, ['\n						'])),
        (_l()(), i0.ɵeld(0, null, null, 43, 'div', [['class', 'product-nav']], [[4, 'min-height', 'px']], null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n								'])), (_l()(), i0.ɵted(null, ['\n								'])), (_l()(), i0.ɵeld(0, [[3, 0], ['nav', 1]], null, 39, 'div', [['class', 'nav-wrapper']], [[4, 'width', 'px']], [['window', 'scroll']], function (_v, en, $event) {
            var ad = true;
            if (('window:scroll' === en)) {
                var pd_0 = (i0.ɵnov(_v, 43).onWindowScroll() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(16384, null, 0, i1.AffixDirective, [i2.DOCUMENT, i0.ElementRef], { scrollOffset: [0, 'scrollOffset'], affixTop: [1,
                'affixTop'] }, null), (_l()(), i0.ɵted(null, ['\n										'])),
        (_l()(), i0.ɵeld(0, null, null, 33, 'ul', [['class', 'nav nav-tabs']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n												'])), (_l()(), i0.ɵeld(0, null, null, 6, 'li', [['routerLinkActive', 'active']], null, null, null, null, null)), i0.ɵdid(1720320, null, 2, i3.RouterLinkActive, [i3.Router, i0.ElementRef, i0.Renderer2, i0.ChangeDetectorRef], { routerLinkActive: [0, 'routerLinkActive'] }, null), i0.ɵqud(603979776, 5, { links: 1 }), i0.ɵqud(603979776, 6, { linksWithHrefs: 1 }), (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/overview']], [[1, 'target',
                0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 52).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, [[6, 4]], 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['OVERVIEW'])), (_l()(), i0.ɵted(null, ['\n												'])), (_l()(), i0.ɵeld(0, null, null, 6, 'li', [['routerLinkActive', 'active']], null, null, null, null, null)), i0.ɵdid(1720320, null, 2, i3.RouterLinkActive, [i3.Router, i0.ElementRef, i0.Renderer2, i0.ChangeDetectorRef], { routerLinkActive: [0,
                'routerLinkActive'] }, null), i0.ɵqud(603979776, 7, { links: 1 }), i0.ɵqud(603979776, 8, { linksWithHrefs: 1 }), (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/getting-started']], [[1, 'target', 0], [8, 'href',
                4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 60).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, [[8, 4]], 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['GETTING STARTED'])), (_l()(),
            i0.ɵted(null, ['\n												'])), (_l()(), i0.ɵeld(0, null, null, 6, 'li', [['routerLinkActive', 'active']], null, null, null, null, null)), i0.ɵdid(1720320, null, 2, i3.RouterLinkActive, [i3.Router, i0.ElementRef, i0.Renderer2, i0.ChangeDetectorRef], { routerLinkActive: [0, 'routerLinkActive'] }, null), i0.ɵqud(603979776, 9, { links: 1 }), i0.ɵqud(603979776, 10, { linksWithHrefs: 1 }), (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/concept-and-structure']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 68).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, [[10, 4]], 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['CONCEPT & STRUCTURE'])), (_l()(),
            i0.ɵted(null, ['\n												'])), (_l()(), i0.ɵeld(0, null, null, 6, 'li', [['routerLinkActive', 'active']], null, null, null, null, null)), i0.ɵdid(1720320, null, 2, i3.RouterLinkActive, [i3.Router, i0.ElementRef, i0.Renderer2, i0.ChangeDetectorRef], { routerLinkActive: [0, 'routerLinkActive'] }, null), i0.ɵqud(603979776, 11, { links: 1 }), i0.ɵqud(603979776, 12, { linksWithHrefs: 1 }), (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/example']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 76).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, [[12, 4]], 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['EXAMPLE'])), (_l()(), i0.ɵted(null, ['\n										'])), (_l()(), i0.ɵted(null, ['\n										'])), (_l()(),
            i0.ɵeld(0, null, null, 0, 'div', [['class', 'shadow']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n								'])), (_l()(), i0.ɵted(null, ['\n						'])), (_l()(), i0.ɵted(null, ['\n						'])), (_l()(), i0.ɵeld(0, null, null, 4, 'div', [['class',
                'plain-content']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n								'])), (_l()(), i0.ɵeld(16777216, null, null, 1, 'router-outlet', [], null, null, null, null, null)), i0.ɵdid(212992, null, 0, i3.RouterOutlet, [i3.ChildrenOutletContexts, i0.ViewContainerRef,
            i0.ComponentFactoryResolver, [8, null], i0.ChangeDetectorRef], null, null), (_l()(), i0.ɵted(null, ['\n						'])),
        (_l()(), i0.ɵted(null, ['\n				'])), (_l()(), i0.ɵted(null, ['\n		'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_1 = _co.titleAffix;
        var currVal_2 = '97';
        _ck(_v, 13, 0, currVal_1, currVal_2);
        var currVal_3 = '/simulator/getting-started';
        _ck(_v, 30, 0, currVal_3);
        var currVal_6 = _co.navAffix;
        var currVal_7 = i0.ɵinlineInterpolate(1, '', _co.navTop, '');
        _ck(_v, 43, 0, currVal_6, currVal_7);
        var currVal_8 = 'active';
        _ck(_v, 48, 0, currVal_8);
        var currVal_11 = '/simulator/overview';
        _ck(_v, 52, 0, currVal_11);
        var currVal_12 = 'active';
        _ck(_v, 56, 0, currVal_12);
        var currVal_15 = '/simulator/getting-started';
        _ck(_v, 60, 0, currVal_15);
        var currVal_16 = 'active';
        _ck(_v, 64, 0, currVal_16);
        var currVal_19 = '/simulator/concept-and-structure';
        _ck(_v, 68, 0, currVal_19);
        var currVal_20 = 'active';
        _ck(_v, 72, 0, currVal_20);
        var currVal_23 = '/simulator/example';
        _ck(_v, 76, 0, currVal_23);
        _ck(_v, 87, 0);
    }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.titleMinHeight;
        _ck(_v, 10, 0, currVal_0);
        var currVal_4 = _co.navMinHeight;
        _ck(_v, 39, 0, currVal_4);
        var currVal_5 = _co.navWidth;
        _ck(_v, 42, 0, currVal_5);
        var currVal_9 = i0.ɵnov(_v, 52).target;
        var currVal_10 = i0.ɵnov(_v, 52).href;
        _ck(_v, 51, 0, currVal_9, currVal_10);
        var currVal_13 = i0.ɵnov(_v, 60).target;
        var currVal_14 = i0.ɵnov(_v, 60).href;
        _ck(_v, 59, 0, currVal_13, currVal_14);
        var currVal_17 = i0.ɵnov(_v, 68).target;
        var currVal_18 = i0.ɵnov(_v, 68).href;
        _ck(_v, 67, 0, currVal_17, currVal_18);
        var currVal_21 = i0.ɵnov(_v, 76).target;
        var currVal_22 = i0.ɵnov(_v, 76).href;
        _ck(_v, 75, 0, currVal_21, currVal_22);
    });
}
export function View_SimulatorComponent_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 1, 'nvlabs-simulator', [], null, [['window', 'resize']], function (_v, en, $event) {
            var ad = true;
            if (('window:resize' === en)) {
                var pd_0 = (i0.ɵnov(_v, 1).onResize() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, View_SimulatorComponent_0, RenderType_SimulatorComponent)), i0.ɵdid(114688, null, 0, i5.SimulatorComponent, [i2.Title], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
    }, null);
}
export var SimulatorComponentNgFactory = i0.ɵccf('nvlabs-simulator', i5.SimulatorComponent, View_SimulatorComponent_Host_0, {}, {}, []);
var styles_SimulatorOverviewComponent = [];
export var RenderType_SimulatorOverviewComponent = i0.ɵcrt({ encapsulation: 2,
    styles: styles_SimulatorOverviewComponent, data: {} });
export function View_SimulatorOverviewComponent_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 1, 'h2', [], null, null, null, null, null)), (_l()(),
            i0.ɵted(null, ['Welcome to the gem5-NVP!'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 5, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['To learn how to download, build, and use gem5-NVP, please visit '])), (_l()(),
            i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/getting-started']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
                var ad = true;
                if (('click' === en)) {
                    var pd_0 = (i0.ɵnov(_v, 6).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                    ad = (pd_0 && ad);
                }
                return ad;
            }, null, null)), i0.ɵdid(671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['GETTING STARTED'])), (_l()(), i0.ɵted(null, ['.'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 5, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['For more information about the concepts and structure of gem5-NVP to acheive a custom usage, please visit '])),
        (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/documentation']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 13).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['CONCEPT & STRUCTURE'])), (_l()(),
            i0.ɵted(null, ['.'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 5, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Page '])), (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink',
                '/simulator/examples']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 20).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['EXAMPLE'])), (_l()(), i0.ɵted(null, [' provides an example of simulating a single-cycle MCU with a 2-thres energy state machine.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['If you have questions, feel free to send email to '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'mailto:lf-zhang13@mails.tsinghua.edu.cn']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['lf-zhang13@mails.tsinghua.edu.cn'])), (_l()(),
            i0.ɵted(null, ['.'])), (_l()(), i0.ɵted(null, ['\n\n\n'])),
        (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden',
                'true'], ['class', 'anchor'], ['href', '#what-is-gem5-nvp'], ['id', 'user-content-what-is-gem5-nvp']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['What is gem5-NVP?'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-NVP is a simulating tool based on gem5 simulator. At the very beginning, it is designed to simulate nonvolatile systems. However, currently, it is proved to have capability of simulating all kinds of energy-aware behaviors, such as dynamic frequency according to energy remained, multi-level sleep behavior, etc.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#what-features-does-gem5-nvp-have'], ['id', 'user-content-what-features-does-gem5-nvp-have']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['What features does gem5-NVP have?'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-NVP provides each SimObject in gem5 the ability to consume energy and give respond to system\'s energy state changes. It also enables SimObjects to transfer energy to each other through a module called "Energy Port". Moreover, gem5-NVP provides a basic class for energy state controller in real energy-aware systems, named "EnergyMgmt". Users can use the interfaces of it to simulate custom power control behavior.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#how-does-gem5-nvp-achieve-these-functions'], ['id', 'user-content-how-does-gem5-nvp-achieve-these-functions']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['How does gem5-NVP achieve these functions?'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-NVP brings a new parent class to gem5\'s SimObject called "EnergyObject". EnergyObject has energy ports to transfer energy to other EnergyObjects, and also gives some interfaces to SimObject for consuming energy and responding to energy state changes.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-NVP introduces a new module (SimObject) in the system, named EnergyMgmt, as the power controller of the whole system. It communicates with other SimObjects through "Energy Ports". EnergyMgmt module handles the state changes of the whole system as well as the way the system harvests energy from external environment.'])),
        (_l()(), i0.ɵted(null, ['\n']))], function (_ck, _v) {
        var currVal_2 = '/simulator/getting-started';
        _ck(_v, 6, 0, currVal_2);
        var currVal_5 = '/simulator/documentation';
        _ck(_v, 13, 0, currVal_5);
        var currVal_8 = '/simulator/examples';
        _ck(_v, 20, 0, currVal_8);
    }, function (_ck, _v) {
        var currVal_0 = i0.ɵnov(_v, 6).target;
        var currVal_1 = i0.ɵnov(_v, 6).href;
        _ck(_v, 5, 0, currVal_0, currVal_1);
        var currVal_3 = i0.ɵnov(_v, 13).target;
        var currVal_4 = i0.ɵnov(_v, 13).href;
        _ck(_v, 12, 0, currVal_3, currVal_4);
        var currVal_6 = i0.ɵnov(_v, 20).target;
        var currVal_7 = i0.ɵnov(_v, 20).href;
        _ck(_v, 19, 0, currVal_6, currVal_7);
    });
}
export function View_SimulatorOverviewComponent_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 1, 'nvlabs-simulator-overview', [], null, null, null, View_SimulatorOverviewComponent_0, RenderType_SimulatorOverviewComponent)), i0.ɵdid(49152, null, 0, i5.SimulatorOverviewComponent, [], null, null)], null, null);
}
export var SimulatorOverviewComponentNgFactory = i0.ɵccf('nvlabs-simulator-overview', i5.SimulatorOverviewComponent, View_SimulatorOverviewComponent_Host_0, {}, {}, []);
var styles_SimulatorGettingStartedComponent = [];
export var RenderType_SimulatorGettingStartedComponent = i0.ɵcrt({ encapsulation: 2,
    styles: styles_SimulatorGettingStartedComponent, data: {} });
export function View_SimulatorGettingStartedComponent_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#pre-requirement'],
            ['id', 'user-content-pre-requirement']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Pre-Requirement'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-NVP depends on nothing besides the dependencies of gem5 simulator. Tools needed before building gem5-NVP can be found at '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Dependencies']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org/Dependencies'])), (_l()(),
            i0.ɵted(null, ['.'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden',
                'true'], ['class', 'anchor'], ['href', '#download'], ['id', 'user-content-download']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Download'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-NVP uses github to control its version. The latest version can be found at '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'https://github.com/zlfben/gem5']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['https://github.com/zlfben/gem5'])), (_l()(), i0.ɵted(null, [', and there are previous versions among tags of the repository (nvp-v*.*). You can get the latest stable version like this:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 5, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 4, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['git clone https://github.com/zlfben/gem5.git\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['cd'])), (_l()(), i0.ɵted(null, [' gem5\ngit checkout nvp-v2.0'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#build'], ['id', 'user-content-build']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Build'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The build process of gem5-NVP is almost the same as gem5 simulator. Scons is used to build target system to be simulated. Theoretically, different ISAs are supported by gem5-NVP. However, gem5-NVP is tested under ARM, so the following build option is recommended:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['mv README.md README\nscons build/ARM/gem5.debug'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['One tricky thing is that gem5 checks its original raw README during its build, so we can simply rename README.md into README. Markdown file is used only for better github page.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#usages'], ['id', 'user-content-usages']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Usages'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 4, 'h4', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden',
                'true'], ['class', 'anchor'], ['href', '#simulation-via-custom-simulation-script'],
            ['id', 'user-content-simulation-via-custom-simulation-script']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Simulation via Custom Simulation Script'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Although gem5-NVP provides a simulation script that recieves arguments to control the whole system, we highly recommand that users need to understand how the system is assembled on the python side. Thus, we will introduce how to configure gem5-NVP, especially the energy part, in the python side. Here is a simple configuration python code of gem5 which is compatible with gem5-NVP but does not contain energy behavior:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 144, 'div', [['class', 'highlight highlight-source-python']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 143, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])),
        (_l()(), i0.ɵted(null, [' m5\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['from'])), (_l()(), i0.ɵted(null, [' m5.objects '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['*'])), (_l()(), i0.ɵted(null, ['\n\nsystem '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' System()\nsystem.clk_domain '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' SrcClockDomain()\nsystem.clk_domain.clock '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['1MHz'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['\nsystem.clk_domain.voltage_domain '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' VoltageDomain()\nsystem.mem_mode '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['atomic'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['\nsystem.mem_ranges '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(),
            i0.ɵted(null, [' [AddrRange('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['512MB'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, [')]\n\nsystem.cpu '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(),
            i0.ɵted(null, [' AtomicSimpleCPU()\n\nsystem.membus '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' SystemXBar()\n\nsystem.cpu.icache_port '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.slave\nsystem.cpu.dcache_port '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.slave\n\nsystem.cpu.createInterruptController()\n\nsystem.mem_ctrl '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' DDR3_1600_x64()\nsystem.mem_ctrl.range '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.mem_ranges['])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [']\nsystem.mem_ctrl.port '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.master\n\nsystem.system_port '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.slave\n\nprocess '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' LiveProcess()\nprocess.cmd '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' ['])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['tests/test-progs/hello/bin/arm/linux/hello'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [']\nsystem.cpu.workload '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' process\nsystem.cpu.createThreads()\n\nroot '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' Root('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['full_system'])),
        (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c1']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['False'])), (_l()(), i0.ɵted(null, [', '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['system'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(),
            i0.ɵted(null, [' system)\nm5.instantiate()\n\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['print'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['Beginning simulation!'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\nexit_event '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' m5.simulate()\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['print'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 10, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['Exiting @ tick '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['%i'])), (_l()(),
            i0.ɵted(null, [' because '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['%s'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['%'])), (_l()(),
            i0.ɵted(null, [' (m5.curTick(), exit_event.getCause())'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['To simulate energy-aware systems, we need to add several things to the original python code:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'ul', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['add a energy management module and connect it to other parts of the system'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['determine how much energy other parts in the system consume in a certain time unit\nHere is an example code:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 210, 'div', [['class', 'highlight highlight-source-python']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 209, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' m5\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['from'])), (_l()(), i0.ɵted(null, [' m5.objects '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['*'])), (_l()(),
            i0.ɵted(null, ['\n\nsystem '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(),
            i0.ɵted(null, [' System()\nsystem.clk_domain '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' SrcClockDomain()\nsystem.clk_domain.clock '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['1MHz'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['\nsystem.clk_domain.voltage_domain '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' VoltageDomain()\nsystem.mem_mode '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['atomic'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['\nsystem.mem_ranges '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(),
            i0.ɵted(null, [' [AddrRange('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['512MB'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, [')]\n\nsystem.cpu '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(),
            i0.ɵted(null, [' AtomicSimpleCPU()\n\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' Energy management module of the system'])), (_l()(), i0.ɵted(null, ['\nsystem.energy_mgmt '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' EnergyMgmt()\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' Tell EnergyMgmt the path to the energy profile'])),
        (_l()(), i0.ɵted(null, ['\nsystem.energy_mgmt.path_energy_profile '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['profile/energy_prof'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' Tell EnergyMgmt the time unit of the energy profile'])), (_l()(), i0.ɵted(null, ['\nsystem.energy_time_unit '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class',
                'pl-s']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['10us'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' Connect the energy port of the cpu to the one of EnergyMgmt'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' Every SimObject has s_energy_port and m_energy_port. If you '])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' want a SimObject to be under the control of EnergyMgmt, you'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' should connect its s_energy_port to EnergyMgmt\'s m_enrgy_port '])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' using "=".'])),
        (_l()(), i0.ɵted(null, ['\nsystem.cpu.s_energy_port '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.energy_mgmt.m_energy_port\n\nsystem.membus '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' SystemXBar()\n\nsystem.cpu.icache_port '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.slave\nsystem.cpu.dcache_port '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.slave\n\nsystem.cpu.createInterruptController()\n\nsystem.mem_ctrl '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' DDR3_1600_x64()\nsystem.mem_ctrl.range '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.mem_ranges['])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [']\nsystem.mem_ctrl.port '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.master\n\nsystem.system_port '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' system.membus.slave\n\nprocess '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' LiveProcess()\nprocess.cmd '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' ['])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['tests/test-progs/hello/bin/arm/linux/hello'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [']\nsystem.cpu.workload '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' process\nsystem.cpu.createThreads()\n\nroot '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' Root('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['full_system'])),
        (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c1']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['False'])), (_l()(), i0.ɵted(null, [', '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['system'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(),
            i0.ɵted(null, [' system)\nm5.instantiate()\n\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['print'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['Beginning simulation!'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\nexit_event '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' m5.simulate()\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['print'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 10, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(),
            i0.ɵted(null, ['Exiting @ tick '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['%i'])), (_l()(),
            i0.ɵted(null, [' because '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['%s'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['%'])), (_l()(),
            i0.ɵted(null, [' (m5.curTick(), exit_event.getCause())'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 8, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Now gem5-NVP only supports AtomicSimpleCPU. If you wants to add support for other models, you can visit '])),
        (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/documentation']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 435).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['CONCEPT & STRUCTURE'])), (_l()(),
            i0.ɵted(null, [' to get more information about the workflow of gem5-NVP and implement energy-aware behavior of the model you want. If you want to simulate of a system that contains external devices, you may want to check out the page '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'https://github.com/zlfben/gem5/wiki/Virtual-Devices']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['https://github.com/zlfben/gem5/wiki/Virtual-Devices'])),
        (_l()(), i0.ɵted(null, [' for more information. The code mentioned above can be found at "configs/example/simple_engy.py"'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h4', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#simulation-via-sample-simulation-script'], ['id', 'user-content-simulation-via-sample-simulation-script']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Simulation via Sample Simulation Script'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-nvp provides an alternated script based on "./configs/example/se.py" to simulate energy-related systems, using System Call Emulation Mode in gem5. The path to the script is "./configs/example/se_engy.py". The script works just as simple_engy.py, but receives parameters to control the energy behaviors.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h6', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#arguments-of-simulating-script'], ['id', 'user-content-arguments-of-simulating-script']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Arguments of Simulating Script'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 34, 'table', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'thead', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Argument'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Description'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 19, 'tbody', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['--energy-prof=', 'FILE}'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Locate the path to energy profile.'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['--energy-time-unit=', 'TIME_UNIT}'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Set time unit of energy profile. (Default \'1us\')'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h4', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class',
                    'anchor'], ['href', '#arguments-of-target-system-related-to-gem5-nvp'],
                ['id', 'user-content-arguments-of-target-system-related-to-gem5-nvp']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Arguments of Target System Related to gem5-NVP'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['A new debug flag is introduced in gem5-NVP. Users can type the following command to output the debug information of EnergyMgmt module:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['build/ARM/gem5.debug --debug-flags=EnergyMgmt [ simulation script ]'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 34, 'table', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'thead', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Argument'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Description'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 19, 'tbody', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['--debug-flags=', 'FLAGS}'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Decide what kinds of debug information to print. "EnergyMgmt" for energy behavior.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['--debug-file=', 'FILE}'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Set the target file for debug output.'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 4, 'h4', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden',
                'true'], ['class', 'anchor'], ['href', '#example'], ['id', 'user-content-example']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Example'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The following examples will simulate systems running "./test/test-progs/hello/bin/arm/linux/hello".\nTo run exactly like gem5 (No energy behavior is simulated):'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['build/ARM/gem5.debug configs/example/se_engy.py -c tests/test-progs/hello/bin/arm/linux/hello'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['To simulate atomic cpu\'s energy behavior, using energy profile "./profile/energy_prof", with energy_time_unit = 1us, printing all the debug information of energy behavior into "./m5out/a.out":'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 9, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 8, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['build/ARM/gem5.debug --debug-flags=EnergyMgmt --debug-file=a.out configs/example/se_engy.py -c tests/test-progs/hello/bin/arm/linux/hello --energy-profile=./profile/energy_prof --energy-time-unit='])),
        (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['1us'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['To use the custom script:'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'div', [['class',
                'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['build/ARM/gem5.debug configs/example/simple_engy.py'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 5, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Gem5-NVP also supports more advanced functions which require developers to modify source code, like simulating systems with 2-threshold energy state machine. An example of such usage can be found at '])),
        (_l()(), i0.ɵeld(0, null, null, 2, 'a', [['routerLink', '/simulator/examples']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i0.ɵnov(_v, 579).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), (_l()(), i0.ɵted(null, ['EXAMPLE'])), (_l()(), i0.ɵted(null, ['.'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class',
                    'anchor'], ['href', '#gem5-readme'], ['id', 'user-content-gem5-readme']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['gem5 README'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['This is the gem5 simulator.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The main website can be found at '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['A good starting point is '])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Introduction']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org/Introduction'])), (_l()(),
            i0.ɵted(null, [', and for\nmore information about building the simulator and getting started\nplease see '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Documentation']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org/Documentation'])), (_l()(),
            i0.ɵted(null, [' and\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Tutorials']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['http://www.gem5.org/Tutorials'])), (_l()(), i0.ɵted(null, ['.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['To build gem5, you will need the following software: g++ or clang,\nPython (gem5 links in the Python interpreter), SCons, SWIG, zlib, m4,\nand lastly protobuf if you want trace capture and playback\nsupport. Please see '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Dependencies']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org/Dependencies'])), (_l()(),
            i0.ɵted(null, [' for more details\nconcerning the minimum versions of the aforementioned tools.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Once you have all dependencies resolved, type \'scons\nbuild//gem5.opt\' where ARCH is one of ALPHA, ARM, NULL, MIPS,\nPOWER, SPARC, or X86. This will build an optimized version of the gem5\nbinary (gem5.opt) for the the specified architecture. See\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Build_System']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org/Build_System'])), (_l()(),
            i0.ɵted(null, [' for more details and options.'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['With the simulator built, have a look at\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Running_gem5']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org/Running_gem5'])), (_l()(),
            i0.ɵted(null, [' for more information on how to use\ngem5.'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The basic source release includes these subdirectories:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 19, 'ul', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['configs: example simulation configuration scripts'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['ext: less-common external packages needed to build gem5'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['src: source code of the gem5 simulator'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['system: source for some optional system software for simulated systems'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['tests: regression tests'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['util: useful utility programs and files'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 3, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['To run full-system simulations, you will need compiled system firmware\n(console and PALcode for Alpha), kernel binaries and one or more disk\nimages. Please see the gem5 download page for these items at\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://www.gem5.org/Download']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['http://www.gem5.org/Download'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['If you have questions, please send mail to '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'mailto:gem5-users@gem5.org']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['gem5-users@gem5.org'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Enjoy using gem5 and please share your modifications and extensions.'])),
        (_l()(), i0.ɵted(null, ['\n']))], function (_ck, _v) {
        var currVal_2 = '/simulator/documentation';
        _ck(_v, 435, 0, currVal_2);
        var currVal_9 = '/simulator/examples';
        _ck(_v, 579, 0, currVal_9);
    }, function (_ck, _v) {
        var currVal_0 = i0.ɵnov(_v, 435).target;
        var currVal_1 = i0.ɵnov(_v, 435).href;
        _ck(_v, 434, 0, currVal_0, currVal_1);
        var currVal_3 = '{';
        _ck(_v, 476, 0, currVal_3);
        var currVal_4 = '{';
        _ck(_v, 485, 0, currVal_4);
        var currVal_5 = '{';
        _ck(_v, 525, 0, currVal_5);
        var currVal_6 = '{';
        _ck(_v, 534, 0, currVal_6);
        var currVal_7 = i0.ɵnov(_v, 579).target;
        var currVal_8 = i0.ɵnov(_v, 579).href;
        _ck(_v, 578, 0, currVal_7, currVal_8);
    });
}
export function View_SimulatorGettingStartedComponent_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 1, 'nvlabs-simulator-getting-started', [], null, null, null, View_SimulatorGettingStartedComponent_0, RenderType_SimulatorGettingStartedComponent)), i0.ɵdid(49152, null, 0, i5.SimulatorGettingStartedComponent, [], null, null)], null, null);
}
export var SimulatorGettingStartedComponentNgFactory = i0.ɵccf('nvlabs-simulator-getting-started', i5.SimulatorGettingStartedComponent, View_SimulatorGettingStartedComponent_Host_0, {}, {}, []);
var styles_SimulatorConceptAndStructureComponent = [];
export var RenderType_SimulatorConceptAndStructureComponent = i0.ɵcrt({ encapsulation: 2,
    styles: styles_SimulatorConceptAndStructureComponent, data: {} });
export function View_SimulatorConceptAndStructureComponent_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#contents'], ['id',
                'user-content-contents']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden',
                'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Contents'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 94, 'ul', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 16, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 2, 'a', [['fragment', 'user-content-energy-objects'],
                ['routerLink', '/simulator/concept-and-structure']], [[1, 'target', 0], [8, 'href',
                    4]], [[null, 'click']], function (_v, en, $event) {
                var ad = true;
                var _co = _v.component;
                if (('click' === en)) {
                    var pd_0 = (i0.ɵnov(_v, 11).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                    ad = (pd_0 && ad);
                }
                if (('click' === en)) {
                    var pd_1 = (_co.onAnchorClick() !== false);
                    ad = (pd_1 && ad);
                }
                return ad;
            }, null, null)), i0.ɵdid(671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { fragment: [0, 'fragment'], routerLink: [1,
                'routerLink'] }, null), (_l()(), i0.ɵted(null, ['Energy Objects'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 9, 'ul', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Objects-Members']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Members'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Objects-Interfaces']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Interfaces'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 19, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Ports']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Energy Ports'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 13, 'ul', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Ports-Types-of-Energy-Ports']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Types of Energy Ports'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Ports-Messages-Delivered-by-Energy-Port']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Messages Delivered by Energy Port'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href',
                '#Energy-Ports-How-to-Connect-Energy-Ports']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['How to Connect Energy Ports?'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 23, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Management-Module']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy Management Module'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 17, 'ul', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href',
                '#Energy-Management-Module-Members-and-Interfaces']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Members and Interfaces'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Management-Module-State-Machine']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['State Machine'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Management-Module-Harvesting-Module']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Harvest Module'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Energy-Management-Module-Python-Interfaces']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Python Interfaces'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 23, 'li', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Other-Concepts']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Other Concepts'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 17, 'ul', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Other-Concepts-Energy-Events']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Energy Events'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Other-Concepts-Energy-Profile']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Energy Profile'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Other-Concepts-Debug-Flags']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Debug Flags'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Other-Concepts-Statistics-and-Traces']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Statistics and Traces'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', '#Further-Reading']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Further Reading'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Objects']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#energy-objects'], ['id', 'user-content-energy-objects']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy Objects'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy Object (aka "EnergyObject" in code) is a class that has members and\ninterfaces related to energy behavior. EnergyObjects is implemented as one of\nSimObject\'s parent class, because every "Object" can have energy behavior.\nEnergyObject empowers SimObjects to take actions when receiving energy messages\n(such as power-on, power-off, back-up, etc.). The following picture shows the\ninheritance diagram of SimObject.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['[[images/sim_object.jpeg]]'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Objects-Members']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#members'], ['id',
                'user-content-members']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden',
                'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Members'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 34, 'table', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'thead', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Member'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Description'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 19, 'tbody', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['_seport'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Slave Energy Port (see below) owned by the SimObject. It is used by the SimObject to connect energy management module as a consumer.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['_meport'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Master Energy Port (see below) owned by the SimObject. Normally only EnergyMgmt (see below) uses that port.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Objects-Interfaces']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#interfaces'], ['id', 'user-content-interfaces']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Interfaces'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 61, 'table', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'thead', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Interface'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Description'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 46, 'tbody', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['setSimObject'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Set owner for _seport and _meport, used at initialization stage. Not useful if not changing the structure of gem5-NVP.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['getSlaveEnergyPort'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Get _seport. Not useful if not changing the structure of gem5-NVP.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['getMasterEnergyPort'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Get _meport. Not useful if not changing the structure of gem5-NVP'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['consumeEnergy'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Tell EnergyMgmt (see below) that this SimObject has consumed a certain amount of energy. It is used differently in EnergyMgmt module, but users don\'t need to care about it if not changing the structure of gem5-NVP.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['handleMsg'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Method to specify actions taken when a certain energy message is received. For instance, volatile SimObjects need to erase their data in case of power off, but non-volatile SimObjects only need to deschedule their events. Need to be rewritten by child classes.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Ports']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#energy-ports'], ['id', 'user-content-energy-ports']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy Ports'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy Ports (aka "EnergyPort" in code) is a class that is used by\nSimObjects (EnergyObjects) to communicate with each other. It is very\nsimilar to Port in the original gem5 (used by MemObjects to communicate\nwith each other). Energy Ports can be inter-connected, and\nEnergy Ports can send messages called EnergyMsg (see below) to\nconnected Energy Ports. Normally, EnergyMsgs sent by master port are for\nnotifying the slaves of state changes (power-on, power-off, back-up, etc)\nof the whole system, while reverse ones are for telling EnergyMgmt module\nthat the SimObject is consuming a certain amount of energy in most time.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Ports-Types-of-Energy-Ports']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#types-of-energy-ports'],
            ['id', 'user-content-types-of-energy-ports']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Types of Energy Ports'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['There are two kinds of energy ports: master ports and slave ports. They can\nbe connected with each other (master-slave), but cannot be connected within\none kind (master-master, slave-slave). Functionally they have nearly no difference.\nThe only different point of these two kinds is that one master port can be\nconnected with multiple slave ports, while a slave port can only be connected\nto one master port. Master port has an array of slave ports it is connected with,\nand slave port saves the master port it is connected to.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Ports-Messages-Delivered-by-Energy-Port']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#messages-delivered-by-energy-port'], ['id', 'user-content-messages-delivered-by-energy-port']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Messages Delivered by Energy Port'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Energy ports communicate with each other by sending a structure called EnergyMsg.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'div', [['class', 'highlight highlight-source-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 9, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['struct'])), (_l()(), i0.ɵted(null, [' EnergyMsg\n', '\n  '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['int32_t'])), (_l()(), i0.ɵted(null, [' type;\n  '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' value;\n};'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['This is a very simple data structure. "type" is used to determine which kind\nof message itself is. In most time, what different values of "type" mean is\ndefined by the state machine in EnergyMgmt module (see below). Actions taken\nby SimObjects should be in correspondence with certain energy state machine.\nZero value of type is preserved because it means energy consuming no matter\nwhat energy state machine the whole system uses. The variance "value" is used\nto send energy values. For example, it means how much energy a SimObject has\nconsumed when type is equal to zero.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Ports-How-to-Connect-Energy-Ports']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#how-to-connect-energy-ports'], ['id', 'user-content-how-to-connect-energy-ports']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['How to Connect Energy Ports?'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The next thing we need to concern is that how we determine how those SimObjects\n(with energy ports) is connected. This can be done in simulating scripts.\nGem5-NVP has a swig interface in python to connect two SimObjects\' energy ports.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 9, 'div', [['class', 'highlight highlight-source-python']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 8, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' m5.internal.pyobject connectEnergyPorts\n'])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵted(null, [' s1, s2: SimObjects in python.'])), (_l()(), i0.ɵted(null, ['\nconnectEnergyPorts(s1.getCCObject(), s2.getCCObject())'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The above code connects s1\'s master port with s2\'s slave port. However, that\nconnecting method is not commonly used, because getCCObject() can only used\nafter all the SimObjects are created. Users are more likely to connect energy\nports in the script, when SimObjects are not created.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The most common way is very easy-to-use. Each EnergyObject (aka SimObject) has\na member called s_energy_port and a member called m_energy_port (slave energy\nport and master energy port). Users can connect them simply using "=". For\nexample, if you want the cpu to be under the control of EnergyMgmt module, you\ncan use:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 5, 'div', [['class', 'highlight highlight-source-python']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 4, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['cpu.s_energy_port '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' mgmt.m_energy_port'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Management-Module']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#energy-management-module'],
            ['id', 'user-content-energy-management-module']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy Management Module'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy Management module (aka EnergyMgmt in code) is a new kind of SimObject in\ngem5-NVP. Its function is to simulate the energy control module in real systems.\nIt is able to simulate energy harvesting, voltage detection, system state control,\nand a lot of other functions in real systems. Normally EnergyMgmt is the only\nSimObject that uses the master port while running.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Management-Module-Members-and-Interfaces']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#members-and-interfaces'], ['id', 'user-content-members-and-interfaces']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Members and Interfaces'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h5', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#members-1'], ['id', 'user-content-members-1']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Members'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 97, 'table', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'thead', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Member'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Description'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 82, 'tbody', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['time_unit'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Time unit of the energy profile.'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['energy_remained'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy remained. Same function as capacitors in real non-volatile systems'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['energy_harvest_data'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Energy data read from energy profile.'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['state_machine'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The state machine the controls the system\'s energy state. (See below)'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['harvest_module'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The module that determines how the system harvests energy from energy profile. (See below)'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['event_harvest'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The event for energy harvesting. Happens per time unit.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['event_msg'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The event for broadcasting EnergyMsgs to slaves.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['msg_togo'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['EnergyMsgs that are needed to broadcast to slaves at the current tick, which will be handled by event_msg.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['path_energy_profile'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The path to the energy profile.'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 4, 'h5', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden',
                'true'], ['class', 'anchor'], ['href', '#interfaces-1'], ['id', 'user-content-interfaces-1']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Interfaces'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 70, 'table', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'thead', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Interface'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'th', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Description'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 55, 'tbody', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['consumeEnergy'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align', 'left']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Derived from EnergyObject but used differently. Positive values mean energy is consumed (energy_remained goes down), while negative values mean that energy is harvested (energy_remained goes up).'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['broadcastMsg'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The interface called when event_msg happens. It will broadcast a message to all the slaves.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['broadcastAsEvent'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Wrapper for broadcastMsg to make it into events. We broadcast messages in specify event because we don\'t want to mess up things in a single event.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['handleMsg'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The interface called when EnergyMgmt receives a message (Mostly energy consuming).'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['energyHarvest'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The interface called when event_harvest happens. Harvest energy from energy_harvest_data/'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'tr', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['readEnergyProfile'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'td', [['align',
                'left']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['The function to read data from energy profile. Called at initialization stage.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Management-Module-State-Machine']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#state-machine'], ['id', 'user-content-state-machine']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['State Machine'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['In most non-volatile system, there is an energy state machine to control the system\'s\npower state. Gem5-NVP has an energy state machine object to control the system\'s state.\nThere is a base state machine class called "BaseEnergySM" defining the basic interface an\nenergy state machine should have. Users of gem5-NVP should over-write the interface\nto achieve a custom state controller they want. An additional function is provided to\nhelp the energy state machine to inform the system of state changes.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'div', [['class', 'highlight highlight-source-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 9, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['void'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-en']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['update'])), (_l()(), i0.ɵted(null, ['('])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' _energy)'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['This interface is used for the system to tell the energy state machine that the remaining\nenergy in the capacitor of the system has changed. Once the system harvests or consumes some\nenergy, EnergyMgmt module will call this api to inform the state controller. Users should\nrewrite this api in their derived state machine class. The state maintained in the object\nmay be changed or maintained according to the energy provided.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 10, 'div', [['class', 'highlight highlight-source-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 9, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['void'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-en']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['broadcastMsg'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['const'])), (_l()(), i0.ɵted(null, [' EnergyMsg &msg);'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['This function is to broadcast a EnergyMsg to the whole system. This interface is\nuseful because in most time the state machine has to inform the system to perform some kinds\nof operation when the state is changed. If such notification is needed, "broadcastMsg" is\ncalled inside "update". Normally the field "type" in EnergyMsg is defined when designing\nenergy state machine, and the operation other parts in the system take is implemented\naccording to those message types.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h5', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#example'], ['id', 'user-content-example']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Example'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Here is an example of a very straight-forward energy state machine, which is the default\nenergy state machine gem5-NVP provides. There are only 2 states, power-on and power-off in\nthe state machine. Once the energy goes below zero, power-off message is sent to the whole\nsystem, and when energy becomes positive, power-on message is sent. Below is the "update"\nfunction of such energy state machine.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 49, 'div', [['class', 'highlight highlight-source-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 48, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['void'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-en']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['SimpleEnergySM::update'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' _energy)\n',
            '\n  EnergyMsg msg;\n  msg.'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['val'])), (_l()(),
            i0.ɵted(null, [' = '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [';\n\n  '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['if'])), (_l()(), i0.ɵted(null, [' (state == STATE_INIT) ',
            '\n    state = STATE_POWERON;\n  } '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['else'])), (_l()(),
            i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['if'])), (_l()(), i0.ɵted(null, [' (state == STATE_POWERON && _energy < '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(),
            i0.ɵted(null, [') ', '\n    state = STATE_POWEROFF;\n    msg.'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [' = MsgType ::POWEROFF;\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['broadcastMsg'])), (_l()(), i0.ɵted(null, ['(msg);\n  } '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['else'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['if'])), (_l()(),
            i0.ɵted(null, [' (state == STATE_POWEROFF && _energy > '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [') ', '\n    state = STATE_POWERON;\n    msg.'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [' = MsgType::POWERON;\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['broadcastMsg'])), (_l()(), i0.ɵted(null, ['(msg);\n  }\n}'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The derived class of the state machine is called "SimpleEnergySM" in code.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Management-Module-Harvesting-Module']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#harvesting-module'], ['id', 'user-content-harvesting-module']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Harvesting Module'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Real-world systems have complicated energy harvest module, which includes voltage transform\nmodule, rectification module, etc. Gem5-NVP does not care those complex part of energy flow.\nIt only receives energy profile which contains power amplitude at discrete time. The harvesting\nmodule only needs to tell how much energy can be harvested given one item in the energy profile.\nThe following interface is what a user of gem5-NVP should understand.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 13, 'div', [['class', 'highlight highlight-source-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 12, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-en']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['energy_harvest'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' energy_harvested, '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' energy_remained)'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The interface gets the current remained energy in the capacitor and the energy item in energy\nprofile to perform its calculation. The interface returns the remained energy in the capacitor\nafter the system has harvested the energy provided in the energy profile.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h5', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#example-1'], ['id', 'user-content-example-1']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Example'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Like the energy state machine module, energy harvesting module also has a default derived class,\nnamed "SimpleHarvest". The "energy_harvest" method in it is shown below.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 16, 'div', [['class', 'highlight highlight-source-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 15, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-en']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['SimpleHarvest::energy_harvest'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' energy_harvested, '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' energy_remained)\n', '\n  '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['return'])), (_l()(), i0.ɵted(null, [' energy_remained + energy_harvested;\n}'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['All the energy in the energy profile goes into the capacitor. Simple, isn\'t it? In real systems,\nit is really hard to harvest more energy once there is abundant energy in the capacitor, and such\nlimitation can be described in the "energy_harvest" method.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Energy-Management-Module-Python-Interfaces']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#python-interfaces'], ['id', 'user-content-python-interfaces']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Python Interfaces'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['It is possible to control some of the behavior of EnergyMgmt module through python scripts as well as\narguments in shell command. The "Get Started" page provides some examples, and users can checkout\n"configs/example/se_engy.py" to find out how to change the config in python script.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Other-Concepts']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#other-concepts'],
            ['id', 'user-content-other-concepts']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Other Concepts'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['There are some other concepts in gem5-NVP that is important.'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Other-Concepts-Energy-Events']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#energy-events'],
            ['id', 'user-content-energy-events']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Energy Events'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['The state changes of the system is implemented through events. Once the state should be changed, the\nenergy state machine put a "state change" event at current tick through "broadcastMsg". Energy state-change\nevent is designed to have lower priority than other events so that state changes happens after all other\nevents at current tick finish. In this way, state changes would not happen inside one process and bring\nconflicts.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Other-Concepts-Energy-Profile']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#energy-profile'],
            ['id', 'user-content-energy-profile']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Energy Profile'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Energy profile is a file that contains amplitude of external power source at discrete time points. All the\nvalues in the profile should be separated by line break or space.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Other-Concepts-Debug-Flags']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#debug-flags'],
            ['id', 'user-content-debug-flags']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Debug Flags'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['A new debug flag, "EnergyMgmt", is introduced into gem5 by gem5-NVP. Users can use the following command to\nactivate the debug flag:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['build/ARM/gem5.debug --debug-flag=EnergyMgmt --debug-file=your_output_file ...'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['If you need to add new debug outputs into the flag, you can simply include "debug/EnergyMgmt.hh" in your\ncode and use "DPRINTF" to print the outputs.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 24, 'div', [['class', 'highlight highlight-source-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 23, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['include'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['debug/EnergyMgmt.hh'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\n\n...\n  '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['DPRINTF'])), (_l()(), i0.ɵted(null, ['(EnergyMgmt, '])), (_l()(),
            i0.ɵeld(0, null, null, 7, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['Hello!'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-cce']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [');\n...\n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Other-Concepts-Statistics-and-Traces']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#statistics-and-traces'],
            ['id', 'user-content-statistics-and-traces']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Statistics and Traces'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['TBD'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 0, 'a', [['name', 'user-content-Further-Reading']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#further-reading'], ['id', 'user-content-further-reading']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Further Reading'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 25, 'ul', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href',
                'http://gem5.org/SimObjects']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Introduction to SimObject'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href',
                'http://gem5.org/Memory_System']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Introduction to Mem System'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href',
                'http://gem5.org/General_Memory_System']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Another Introduction to Mem System'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href',
                'http://learning.gem5.org/book/part2/helloobject.html']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['How to Add Your Own SimObject'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://learning.gem5.org/book/part2/memoryobject.html']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['How to Add Simple MemObject'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'li', [], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['href', 'http://pages.cs.wisc.edu/%7Edavid/courses/cs752/Spring2015/gem5-tutorial/part2/simobject.html']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Creating your first SimObject'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵted(null, ['\n\n']))], function (_ck, _v) {
        var currVal_2 = 'user-content-energy-objects';
        var currVal_3 = '/simulator/concept-and-structure';
        _ck(_v, 11, 0, currVal_2, currVal_3);
    }, function (_ck, _v) {
        var currVal_0 = i0.ɵnov(_v, 11).target;
        var currVal_1 = i0.ɵnov(_v, 11).href;
        _ck(_v, 10, 0, currVal_0, currVal_1);
        var currVal_4 = '{';
        _ck(_v, 268, 0, currVal_4);
        var currVal_5 = '{';
        _ck(_v, 576, 0, currVal_5);
        var currVal_6 = '{';
        _ck(_v, 585, 0, currVal_6);
        var currVal_7 = '{';
        _ck(_v, 594, 0, currVal_7);
        var currVal_8 = '{';
        _ck(_v, 609, 0, currVal_8);
        var currVal_9 = '{';
        _ck(_v, 671, 0, currVal_9);
    });
}
export function View_SimulatorConceptAndStructureComponent_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 1, 'nvlabs-simulator-concept-and-structure', [], null, null, null, View_SimulatorConceptAndStructureComponent_0, RenderType_SimulatorConceptAndStructureComponent)), i0.ɵdid(49152, null, 0, i5.SimulatorConceptAndStructureComponent, [i3.ActivatedRoute], null, null)], null, null);
}
export var SimulatorConceptAndStructureComponentNgFactory = i0.ɵccf('nvlabs-simulator-concept-and-structure', i5.SimulatorConceptAndStructureComponent, View_SimulatorConceptAndStructureComponent_Host_0, {}, {}, []);
var styles_SimulatorExampleComponent = [];
export var RenderType_SimulatorExampleComponent = i0.ɵcrt({ encapsulation: 2,
    styles: styles_SimulatorExampleComponent, data: {} });
export function View_SimulatorExampleComponent_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#example-simulating-a-system-with-two-threshold-energy-state-machine'],
            ['id', 'user-content-example-simulating-a-system-with-two-threshold-energy-state-machine']], null, null, null, null, null)), (_l()(),
            i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class',
                    'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Example: Simulating a System with Two-Threshold Energy State Machine'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['This page will introduce an example on how to simulate a nonvolatile system with a two-threshold energy state machine using gem5-NVP. To get the example more simple, we will use AtomicSimpleCPU as the cpu model, and ignore how the back-up module restores the value in the memory system. THU-1010n is the real-world prototype of such system. We will begin by introducing THU-1010n first.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#introduction-to-thu-1010n'], ['id', 'user-content-introduction-to-thu-1010n']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Introduction to THU-1010n'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['THU-1010n is a single-cycle nonvolatile MCU prototype fabricated using .13um CMOS-ferroelectric hybrid process. It has 8KB SRAM as memory together with a 1607-bit FeFF nonvolatile storage to ensure critical data can be stored in case of lacking power. Below is some properties of THU-1010n.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['In this simulation, we assume that the micro processor works at 1MHz with a 160uW active power. At that frequency, the MCU uses 7 cycles to store data and fall into sleep mode and uses 3 cycles to wake up from sleep. We would simplify the state controller of THU-1010n in this simulation. Two thresholds of energy remained in the capacitor decides when the system will switch from power-off to power-on and from power-on to power-off.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#creating-two-threshold-energy-state-machine'], ['id', 'user-content-creating-two-threshold-energy-state-machine']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Creating Two-Threshold Energy State Machine'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['We need to create a two-threshold energy state machine mentioned above. All instances of energy state machine in gem5-NVP is derived from BaseEnergySM. Gem5-NVP uses SimpleEnergySM as its default state machine, and that state machine cannot meet our demand in this case. Therefore, we are going to derive another state machine class and override "update" method to achieve a two-thres behavior.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#python-side'], ['id', 'user-content-python-side']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Python Side'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Each SimObject has a corresponding class on the python side, and so does our state machine class. On the python side, we need to inherit all the parameters from BaseEnergySM class and add two parameters named "thres_low" and "thres_high" furthermore. In this way, we can control the threshold from simulating scripts. Below is the code on python side:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'b', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['src/engy/TwoThresSM.py'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 83, 'div', [['class',
                'highlight highlight-source-python']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 82, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['from'])), (_l()(), i0.ɵted(null, [' m5.SimObject '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' SimObject\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['from'])), (_l()(), i0.ɵted(null, [' BaseEnergySM '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' BaseEnergySM\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['from'])), (_l()(), i0.ɵted(null, [' m5.params '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['*'])), (_l()(),
            i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['from'])), (_l()(), i0.ɵted(null, [' m5.proxy '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['import'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['*'])), (_l()(), i0.ɵted(null, ['\n\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['class'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSM'])),
        (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-e']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['BaseEnergySM'])), (_l()(),
            i0.ɵted(null, ['):\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])),
        (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['TwoThresSM'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['\n    cxx_header '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['engy/two_thres.hh'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\n    thres_high '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' Param.Float(Parent.thres_high, '])),
        (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['high threshold of energy state machine'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [')\n    thres_low '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' Param.Float(Parent.thres_low, '])),
        (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['low threshold of energy state machine'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [')'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#cpp-side'], ['id', 'user-content-cpp-side']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['CPP Side'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['When creating new SimObject, there are some formality sakes that need to be implemented in order to pass the python parameters to CPP code. We don\'t need to fully understand those codes, and we should only focus on the critical part. Below is the CPP code for the class:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'b', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['src/engy/two_thres.hh'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 137, 'div', [['class',
                'highlight highlight-source-c++']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 136, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['ifndef'])), (_l()(), i0.ɵted(null, [' GEM5_TWO_THRES_HH\n#'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['define'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['GEM5_TWO_THRES_HH'])),
        (_l()(), i0.ɵted(null, ['\n\n#'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['include'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class',
                'pl-s']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['state_machine.hh'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\n#'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['include'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['params/TwoThresSM.hh'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\n\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['class'])),
        (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSM'])), (_l()(), i0.ɵted(null, [' : '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['public'])), (_l()(), i0.ɵted(null, [' '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['BaseEnergySM'])), (_l()(), i0.ɵted(null, ['\n', '\n\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['public:'])), (_l()(), i0.ɵted(null, ['\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['typedef'])), (_l()(), i0.ɵted(null, [' TwoThresSMParams Params;\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['const'])), (_l()(), i0.ɵted(null, [' Params *'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['params'])), (_l()(), i0.ɵted(null, ['() '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['const'])),
        (_l()(), i0.ɵted(null, ['\n    ', '\n        '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['return'])),
        (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['reinterpret_cast'])), (_l()(),
            i0.ɵted(null, ['<'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['const'])), (_l()(), i0.ɵted(null, [' Params *>(_params);\n    }\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSM'])),
        (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['const'])), (_l()(), i0.ɵted(null, [' Params *p);\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['~TwoThresSM'])), (_l()(),
            i0.ɵted(null, ['() ', '}\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['virtual'])),
        (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['void'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-en']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['init'])), (_l()(), i0.ɵted(null, ['();\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['virtual'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['void'])), (_l()(),
            i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['update'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' _energy);\n\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['enum'])), (_l()(), i0.ɵted(null, [' State ', '\n        STATE_INIT = '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [',\n        STATE_POWEROFF = '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['1'])), (_l()(), i0.ɵted(null, [',\n        STATE_POWERON = '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['2'])), (_l()(), i0.ɵted(null, ['\n    };\n\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['enum'])), (_l()(), i0.ɵted(null, [' MsgType ', '\n        CONSUMEENERGY = '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [',\n        POWEROFF = '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['1'])), (_l()(), i0.ɵted(null, [',\n        POWERON = '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['2'])), (_l()(), i0.ɵted(null, ['\n    };\n\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['protected:'])), (_l()(), i0.ɵted(null, ['\n    State state;\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' thres_high;\n    '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' thres_low;\n\n};\n#'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['endif'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['//'])), (_l()(), i0.ɵted(null, ['GEM5_TWO_THRES_HH'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'b', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['src/engy/two_thres.cc'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 127, 'div', [['class', 'highlight highlight-source-c++']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 126, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['include'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['two_thres.hh'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\n#'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['include'])),
        (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['debug/EnergyMgmt.hh'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\n\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSM::TwoThresSM'])), (_l()(), i0.ɵted(null, ['('])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['const'])), (_l()(), i0.ɵted(null, [' Params *p)\n    : BaseEnergySM(p), state(TwoThresSM::State::STATE_INIT),\n      thres_high(p->thres_high), thres_low(p->thres_low)\n',
            '\n\n}\n\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['void'])), (_l()(), i0.ɵted(null, [' '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSM::init'])), (_l()(), i0.ɵted(null, ['()\n', '\n    state = TwoThresSM::State::STATE_POWEROFF;\n    EnergyMsg msg;\n    msg.'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['val'])), (_l()(), i0.ɵted(null, [' = '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [';\n    msg.'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [' = MsgType::POWEROFF;\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['broadcastMsg'])), (_l()(), i0.ɵted(null, ['(msg);\n}\n\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['void'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSM::update'])),
        (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['double'])), (_l()(), i0.ɵted(null, [' _energy)\n', '\n    EnergyMsg msg;\n    msg.'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['val'])), (_l()(), i0.ɵted(null, [' = '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(),
            i0.ɵted(null, [';\n\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['if'])), (_l()(), i0.ɵted(null, [' (state == STATE_INIT) ', '\n        state = STATE_POWERON;\n    } '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['else'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['if'])), (_l()(),
            i0.ɵted(null, [' (state == STATE_POWERON && _energy < thres_low) ',
                '\n        '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['DPRINTF'])), (_l()(), i0.ɵted(null, ['(EnergyMgmt, '])), (_l()(), i0.ɵeld(0, null, null, 7, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['State change: on->off state=%d, _energy=%lf, thres_low=%lf'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-cce']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, [', state, _energy, thres_low);\n        state = STATE_POWEROFF;\n        msg.'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [' = MsgType::POWEROFF;\n        '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['broadcastMsg'])), (_l()(), i0.ɵted(null, ['(msg);\n    } '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['else'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['if'])), (_l()(),
            i0.ɵted(null, [' (state == STATE_POWEROFF && _energy > thres_high) ',
                '\n        '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['DPRINTF'])), (_l()(), i0.ɵted(null, ['(EnergyMgmt, '])), (_l()(), i0.ɵeld(0, null, null, 7, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['State change: off->on state=%d, _energy=%lf, thres_high=%lf'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-cce']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, [', state, _energy, thres_high);\n        state = STATE_POWERON;\n        msg.'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [' = MsgType::POWERON;\n        '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['broadcastMsg'])), (_l()(), i0.ɵted(null, ['(msg);\n    }\n\n}\n\nTwoThresSM *\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSMParams::create'])), (_l()(), i0.ɵted(null, ['()\n', '\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['return'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['new'])), (_l()(),
            i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['TwoThresSM'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c1']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['this'])), (_l()(), i0.ɵted(null, [');\n}'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'],
            ['href', '#sconscript'], ['id', 'user-content-sconscript']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['SConscript'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Next we should add something to SConscript to tell scons about our changes.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'b', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['src/engy/SConscript'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 79, 'div', [['class',
                'highlight highlight-source-python']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 78, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Import('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['*'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\n\nSource('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['energy_mgmt.cc'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\nSource('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['energy_port.cc'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\nSource('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['energy_object.cc'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\nSource('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['state_machine.cc'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\nSource('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['two_thres.cc'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\n\nSimObject('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['EnergyMgmt.py'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\nSimObject('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['BaseEnergySM.py'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\nSimObject('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['SimpleEnergySM.py'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\nSimObject('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['TwoThresSM.py'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')\n\nDebugFlag('])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['EnergyMgmt'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [')'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#implementing-the-actions-taken-when-state-has-changed'],
            ['id', 'user-content-implementing-the-actions-taken-when-state-has-changed']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Implementing the Actions Taken When State Has Changed'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Next, we should tell other parts of the system what they should do when the system\'s state changes. We are using AtomicSimpleCPU in the simulation, and in that CPU module all the processes of the system are triggered by AtomicSimpleCPU::tick() method. Since we don\'t care about details like how back-up module store the values in SRAM, we can only implement actions of AtomicSimpleCPU in case of state changes. We assume that all the critical data can be properly saved and restored when power-off and power-on occur, so the process of the CPU seems to be "delayed" when the system goes from power-on to power-off. Therefore, the action taken when receiving power-off message is descheduling the "tick" event, the one taken when receiving power-on message is scheduling "tick" event. In the following code, we carefully take restore/back-up time into consideration.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'b', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['src/cpu/simple/atomic.cc'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 147, 'div', [['class',
                'highlight highlight-source-c++']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 146, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['...\n\n#'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['include'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['engy/two_thres.hh'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['\n\n...\n\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['void'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['AtomicSimpleCPU::tick'])),
        (_l()(), i0.ɵted(null, ['()\n', '\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['DPRINTF'])),
        (_l()(), i0.ɵted(null, ['(SimpleCPU, '])), (_l()(), i0.ɵeld(0, null, null, 7, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, ['Tick'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-cce']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [');\n\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['consumeEnergy'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['16'])), (_l()(), i0.ɵted(null, [');\n\n    ...\n\n}\n\n...\n\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['int'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['AtomicSimpleCPU::handleMsg'])),
        (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['const'])), (_l()(), i0.ɵted(null, [' EnergyMsg &msg)\n', '\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['int'])), (_l()(), i0.ɵted(null, [' rlt = '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c1']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['1'])), (_l()(), i0.ɵted(null, [';\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['DPRINTF'])), (_l()(), i0.ɵted(null, ['(EnergyMgmt, '])), (_l()(),
            i0.ɵeld(0, null, null, 7, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['handleMsg called at %lu, msg.type=%d'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-cce']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(),
            i0.ɵted(null, [', '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['curTick'])), (_l()(), i0.ɵted(null, ['(), msg.'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-smi']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [');\n    '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['switch'])), (_l()(), i0.ɵted(null, ['(msg.'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['type'])), (_l()(), i0.ɵted(null, [')', '\n        '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['case'])), (_l()(), i0.ɵted(null, [' ('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['int'])), (_l()(),
            i0.ɵted(null, [') TwoThresSM::MsgType::POWEROFF:\n            '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['if'])), (_l()(), i0.ɵted(null, [' (tickEvent.'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['scheduled'])), (_l()(), i0.ɵted(null, ['())\n                '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['consumeEnergy'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['160'])), (_l()(), i0.ɵted(null, ['*'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['7'])), (_l()(),
            i0.ɵted(null, [');\n                '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['deschedule'])),
        (_l()(), i0.ɵted(null, ['(tickEvent);\n            '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['break'])), (_l()(), i0.ɵted(null, [';\n        '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['case'])), (_l()(), i0.ɵted(null, [' ('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['int'])), (_l()(),
            i0.ɵted(null, [') TwoThresSM::MsgType::POWERON:\n            '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['if'])), (_l()(), i0.ɵted(null, [' (!tickEvent.'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['scheduled'])), (_l()(), i0.ɵted(null, ['())\n                '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['consumeEnergy'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['160'])), (_l()(), i0.ɵted(null, ['*'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['3'])), (_l()(),
            i0.ɵted(null, [');\n                '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['schedule'])),
        (_l()(), i0.ɵted(null, ['(tickEvent, '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['curTick'])),
        (_l()(), i0.ɵted(null, ['() + '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['3'])), (_l()(), i0.ɵted(null, [' * '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c1']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['clockPeriod'])), (_l()(), i0.ɵted(null, ['());\n            '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['break'])), (_l()(), i0.ɵted(null, [';\n        '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['default'])), (_l()(), i0.ɵted(null, [':\n            rlt = '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['0'])), (_l()(), i0.ɵted(null, [';\n    }\n    '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['return'])), (_l()(), i0.ɵted(null, [' rlt;\n}\n\n...'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden',
                'true'], ['class', 'anchor'], ['href', '#changing-simulating-scripts'], ['id',
                'user-content-changing-simulating-scripts']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Changing Simulating Scripts'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Make some changes to simulating scripts, and link our energy state machine to the energy management module. Also, we can add some options to scripts to make simulation easier.'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'b', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['configs/example/se_engy.py'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 45, 'div', [['class',
                'highlight highlight-source-python']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 44, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c1']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['...'])), (_l()(), i0.ɵted(null, ['\nsystem.energy_mgmt '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' EnergyMgmt('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['path_energy_profile'])), (_l()(), i0.ɵted(null, [' '])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' options.energy_profile,\n                                '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['energy_time_unit'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' options.energy_time_unit,\n                                '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['energy_modules'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' options.energy_modules,\n                                '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['state_machine'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' TwoThresSM('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['thres_high'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' options.thres_high,\n                '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['thres_low'])), (_l()(), i0.ɵted(null, [' '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵted(null, [' options.thres_low))\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['...'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 2, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'b', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['configs/common/Options.py'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 95, 'div', [['class', 'highlight highlight-source-python']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 94, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['...'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['def'])), (_l()(), i0.ɵted(null, [' '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-en']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['addEngyOptions'])), (_l()(), i0.ɵted(null, ['('])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-smi']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['parser'])), (_l()(), i0.ɵted(null, ['):\n    '])), (_l()(), i0.ɵeld(0, null, null, 3, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['#'])), (_l()(),
            i0.ɵted(null, [' Energy Management Options'])), (_l()(), i0.ɵted(null, ['\n\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-c1']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['...'])), (_l()(), i0.ɵted(null, ['\n\n    parser.add_option('])),
        (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['--thres-high'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [', '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['type'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class',
                'pl-s']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['float'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [', '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['default'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['100'])), (_l()(), i0.ɵted(null, [',\n                      '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['help'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class',
                'pl-s']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['high threshold of energy state machine'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [')\n    parser.add_option('])),
        (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['--thres-low'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [', '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['type'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class',
                'pl-s']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['float'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [', '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['default'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class',
                'pl-k']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['50'])), (_l()(), i0.ɵted(null, [',\n                      '])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-v']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['help'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-k']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['='])), (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class',
                'pl-s']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, ['low threshold of energy state machine'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['"'])), (_l()(), i0.ɵted(null, [')\n\n'])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-c1']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['...'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h2', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(),
            i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class',
                    'anchor'], ['href', '#simulation'], ['id', 'user-content-simulation']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['Simulation'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden', 'true'], ['class', 'anchor'], ['href', '#build-system'],
            ['id', 'user-content-build-system']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'], ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Build System'])), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['From the gem5 repository, run:'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 2, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 1, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['scons build/ARM/gem5.debug'])), (_l()(), i0.ɵted(null, ['\n'])),
        (_l()(), i0.ɵeld(0, null, null, 4, 'h3', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'a', [['aria-hidden',
                'true'], ['class', 'anchor'], ['href', '#run-simulation'], ['id', 'user-content-run-simulation']], null, null, null, null, null)),
        (_l()(), i0.ɵeld(0, null, null, 0, 'span', [['aria-hidden', 'true'],
            ['class', 'octicon octicon-link']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['Run Simulation'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 1, 'p', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['From the gem5 repository, run:'])),
        (_l()(), i0.ɵted(null, ['\n'])), (_l()(), i0.ɵeld(0, null, null, 16, 'div', [['class', 'highlight highlight-source-shell']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 15, 'pre', [], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['build/ARM/gem5.debug --debug-flags=EnergyMgmt --debug-file=a.out configs/example/se_engy.py -c tests/test-progs/hello/bin/arm/linux/hello --cpu-clock='])),
        (_l()(), i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['1MHz'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [' --energy-modules='])), (_l()(),
            i0.ɵeld(0, null, null, 5, 'span', [['class', 'pl-s']], null, null, null, null, null)), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, ['cpu'])), (_l()(), i0.ɵeld(0, null, null, 1, 'span', [['class', 'pl-pds']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\''])), (_l()(), i0.ɵted(null, [' --thres-low=5000 --thres-high=10000 --energy-prof=./profile/energy_prof --energy-time-unit=10000000'])),
        (_l()(), i0.ɵted(null, ['\n\n']))], null, function (_ck, _v) {
        var currVal_0 = '{';
        _ck(_v, 184, 0, currVal_0);
        var currVal_1 = '{';
        _ck(_v, 199, 0, currVal_1);
        var currVal_2 = '{';
        _ck(_v, 217, 0, currVal_2);
        var currVal_3 = '{';
        _ck(_v, 241, 0, currVal_3);
        var currVal_4 = '{';
        _ck(_v, 253, 0, currVal_4);
        var currVal_5 = '{';
        _ck(_v, 312, 0, currVal_5);
        var currVal_6 = '{';
        _ck(_v, 318, 0, currVal_6);
        var currVal_7 = '{';
        _ck(_v, 339, 0, currVal_7);
        var currVal_8 = '{';
        _ck(_v, 348, 0, currVal_8);
        var currVal_9 = '{';
        _ck(_v, 354, 0, currVal_9);
        var currVal_10 = '{';
        _ck(_v, 378, 0, currVal_10);
        var currVal_11 = '{';
        _ck(_v, 399, 0, currVal_11);
        var currVal_12 = '{';
        _ck(_v, 538, 0, currVal_12);
        var currVal_13 = '{';
        _ck(_v, 565, 0, currVal_13);
        var currVal_14 = '{';
        _ck(_v, 595, 0, currVal_14);
    });
}
export function View_SimulatorExampleComponent_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 1, 'nvlabs-simulator-example', [], null, null, null, View_SimulatorExampleComponent_0, RenderType_SimulatorExampleComponent)), i0.ɵdid(49152, null, 0, i5.SimulatorExampleComponent, [], null, null)], null, null);
}
export var SimulatorExampleComponentNgFactory = i0.ɵccf('nvlabs-simulator-example', i5.SimulatorExampleComponent, View_SimulatorExampleComponent_Host_0, {}, {}, []);
//# sourceMappingURL=simulator.component.ngfactory.js.map